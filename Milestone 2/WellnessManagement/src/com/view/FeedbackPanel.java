/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.view;

import com.controller.FeedbackController;
import com.model.Feedback;
import javax.swing.JOptionPane;

/**
 *
 * @author chesa
 */
public class FeedbackPanel extends javax.swing.JPanel {

    private FeedbackController controller;

    /**
     * Creates new form FeedbackPanel1
     */
    public FeedbackPanel() {
        initComponents();
        controller = new FeedbackController();
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        controller.populateTable(tblFeedback);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFeedback = new javax.swing.JPanel();
        lblFeedback = new javax.swing.JLabel();
        btnViewAll = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taComments = new javax.swing.JTextArea();
        btnDelete = new javax.swing.JButton();
        lblStudentName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFeedback = new javax.swing.JTable();
        lblRating = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        cbRating = new javax.swing.JComboBox<>();
        tfStudent = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();

        lblFeedback.setFont(new java.awt.Font("Yu Gothic", 1, 72)); // NOI18N
        lblFeedback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFeedback.setText("FeedBack Panel");

        btnViewAll.setText("View All");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });

        btnEdit.setText("Update");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        taComments.setColumns(20);
        taComments.setRows(5);
        jScrollPane1.setViewportView(taComments);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblStudentName.setText("Student Name:");

        tblFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Student", "Rating", "Comments"
            }
        ));
        jScrollPane2.setViewportView(tblFeedback);

        lblRating.setText("Rating (1-5)");

        lblComments.setText("Comments");

        cbRating.setModel(new javax.swing.DefaultComboBoxModel<>(new Integer[] { 1, 2, 3, 4, 5 }));
        cbRating.setName(""); // NOI18N

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFeedbackLayout = new javax.swing.GroupLayout(pnlFeedback);
        pnlFeedback.setLayout(pnlFeedbackLayout);
        pnlFeedbackLayout.setHorizontalGroup(
            pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFeedbackLayout.createSequentialGroup()
                .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlFeedbackLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFeedbackLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblStudentName)
                                    .addComponent(lblRating, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblComments, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbRating, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfStudent)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlFeedbackLayout.createSequentialGroup()
                                .addComponent(btnSubmit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnViewAll)))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlFeedbackLayout.setVerticalGroup(
            pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFeedbackLayout.createSequentialGroup()
                .addComponent(lblFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFeedbackLayout.createSequentialGroup()
                        .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStudentName)
                            .addComponent(tfStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRating))
                        .addGap(18, 18, 18)
                        .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblComments)
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmit)
                            .addComponent(btnEdit)
                            .addComponent(btnDelete)
                            .addComponent(btnViewAll)))
                    .addGroup(pnlFeedbackLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        String student = tfStudent.getText().trim();
        String comments = taComments.getText().trim();
        Integer rating = (Integer) cbRating.getSelectedItem();

        Feedback feedback = new Feedback();
        feedback.setStudent(student);
        feedback.setRating(rating);
        feedback.setComments(comments);

        controller.submitFeedback(feedback);
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed
        try {
            java.util.List<Feedback> feedbackList = controller.getAllFeedback();  // Fetch from controller

            // Clear existing rows
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblFeedback.getModel();
            model.setRowCount(0);

            // Add feedback rows
            for (Feedback f : feedbackList) {
                Object[] row = {
                    f.getId(),
                    f.getStudent(),
                    f.getRating(),
                    f.getComments()
                };
                model.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "⚠️ Failed to load feedback entries.");
        }
    }//GEN-LAST:event_btnViewAllActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        controller.deleteFeedback(tblFeedback);
        controller.populateTable(tblFeedback);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = tblFeedback.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a feedback entry to edit.");
            return;
        }

        try {
            int id = (int) tblFeedback.getValueAt(selectedRow, 0);
            String student = tfStudent.getText().trim();
            int rating = (int) cbRating.getSelectedItem();
            String comments = taComments.getText().trim();

            if (student.isEmpty() || comments.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields.");
                return;
            }

            controller.editFeedback(id, student, rating, comments);
            controller.populateTable(tblFeedback);  // Refresh table
            clearForm();  // Reset input fields

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error editing feedback: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JComboBox<Integer> cbRating;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblFeedback;
    private javax.swing.JLabel lblRating;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JPanel pnlFeedback;
    private javax.swing.JTextArea taComments;
    private javax.swing.JTable tblFeedback;
    private javax.swing.JTextField tfStudent;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        tfStudent.setText("");
        cbRating.setSelectedIndex(0);
        taComments.setText("");
    }

}
